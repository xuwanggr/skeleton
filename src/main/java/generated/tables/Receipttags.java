/**
 * This class is generated by jOOQ
 */
package generated.tables;


import generated.Public;
import generated.tables.records.ReceipttagsRecord;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Receipttags extends TableImpl<ReceipttagsRecord> {

	private static final long serialVersionUID = -1694636734;

	/**
	 * The reference instance of <code>public.receipttags</code>
	 */
	public static final Receipttags RECEIPTTAGS = new Receipttags();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ReceipttagsRecord> getRecordType() {
		return ReceipttagsRecord.class;
	}

	/**
	 * The column <code>public.receipttags.receiptid</code>.
	 */
	public final TableField<ReceipttagsRecord, Integer> RECEIPTID = createField("receiptid", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.receipttags.merchant</code>.
	 */
	public final TableField<ReceipttagsRecord, String> MERCHANT = createField("merchant", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.receipttags.amount</code>.
	 */
	public final TableField<ReceipttagsRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DECIMAL.precision(12, 2), this, "");

	/**
	 * The column <code>public.receipttags.tagname</code>.
	 */
	public final TableField<ReceipttagsRecord, String> TAGNAME = createField("tagname", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * Create a <code>public.receipttags</code> table reference
	 */
	public Receipttags() {
		this("receipttags", null);
	}

	/**
	 * Create an aliased <code>public.receipttags</code> table reference
	 */
	public Receipttags(String alias) {
		this(alias, RECEIPTTAGS);
	}

	private Receipttags(String alias, Table<ReceipttagsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Receipttags(String alias, Table<ReceipttagsRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Receipttags as(String alias) {
		return new Receipttags(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Receipttags rename(String name) {
		return new Receipttags(name, null);
	}
}
